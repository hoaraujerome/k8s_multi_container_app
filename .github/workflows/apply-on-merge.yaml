name: Apply On Merge

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main

env:
  # PROJECT_ID: ${{ secrets.PROJECT_ID }}
  APPLICATION_NAME: fibonacci-app       # TODO: update to cluster name
  GKE_ZONE: northamerica-northeast1-a	  # TODO: update to cluster zone
  AR_REGION: northamerica-northeast1   # TODO: update to Artifact Registry repo region

jobs:
  build-and-push:
    name: Build application Docker images and push them to the registry
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - client
          - server
          - worker

    # Add "id-token" with the intended permissions.
    # permissions:
    #   contents: 'read'
    #   id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Run tests
      if: ${{ matrix.module == 'client' }}
      run: |
        echo "Build a docker image for tests"
        docker build -t client-test -f ./client/Dockerfile.dev ./client
        echo "Run tests against that image"
        docker run -e CI=true client-test npm test

    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     credentials_json: '${{ secrets.SA_KEY }}'

    # - name: Set up Cloud SDK
    #   uses: google-github-actions/setup-gcloud@v0

    # - name: Configure Docker Client
    #   run: |-
    #     gcloud auth configure-docker $AR_REGION-docker.pkg.dev --quiet

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push the image for the module to the registry
      run: |-
        echo "Building the production docker image for the module"
        docker build -t thecloudprofessional/${{ matrix.module }}:latest thecloudprofessional/${{ matrix.module }}:${{ github.sha }} ./${{ matrix.module }}
        echo "Pushing the image to the registry..."
        docker push thecloudprofessional/${{ matrix.module }}:latest
        docker push thecloudprofessional/${{ matrix.module }}:${{ github.sha }}

    # - name: Get the GKE credentials so we can deploy to the cluster
    #   run: |-
    #     gcloud container clusters get-credentials "$APPLICATION_NAME" --zone "$GKE_ZONE"

    # - name: Deploy
    #   run: |-   
    #     kubectl apply -f k8s
    #     kubectl set image deployments/server-deployment server=
    #     kubectl rollout status deployment/client-deployment
    #     kubectl get services -o wide